<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.trioshop.repository.mybatis.ItemMapper">
    <!--  모든 아이템 검색  -->
    <select id="findAllItem" resultType="ItemInfoByUser">
        SELECT TI.item_code itemCode,
               TC.category_name categoryName,
               TF.factory_name factoryName,
               TI.item_name itemName,
               TS.stock_qty stockQty,
               TI.item_price itemPrice,
               TI.item_src itemSrc
        FROM TRIO_ITEMS TI, TRIO_STOCK TS, TRIO_CATEGORY TC, TRIO_FACTORY TF
        WHERE TI.item_code=TS.item_code
          AND TI.category_code=TC.category_code
          AND TI.factory_code=TF.factory_code
    </select>
    <!--  searchText, categoryName 으로 아이템 검색  -->
    <select id="searchItems" resultType="ItemInfoByUser">
        SELECT
        TI.item_code AS itemCode,
        TC.category_name AS categoryName,
        TF.factory_name AS factoryName,
        TI.item_name AS itemName,
        TS.stock_qty AS stockQty,
        TI.item_price AS itemPrice,
        TI.item_src AS itemSrc
        FROM TRIO_ITEMS TI
        JOIN TRIO_STOCK TS ON TI.item_code = TS.item_code
        JOIN TRIO_CATEGORY TC ON TI.category_code = TC.category_code
        JOIN TRIO_FACTORY TF ON TI.factory_code = TF.factory_code
        WHERE 1=1
        <if test="itemName != null and itemName != ''">
            AND TI.item_name LIKE CONCAT('%', #{itemName}, '%')
        </if>
        <if test="category != null and category != ''">
            AND TC.category_name = #{category}
        </if>
    </select>
    <!--  카테코리 선택을 위한 목록 검색  -->
    <select id="categoryList" resultType="CategoryEntity">
        SELECT category_code,
               category_name
        FROM TRIO_CATEGORY
    </select>
    <!--  item_code 으로 아이템 정보 반환 -->
    <select id="itemInfoByCode" resultType="ItemInfoByUser">
        SELECT TI.item_code AS itemCode,
        TC.category_name AS categoryName,
        TF.factory_name AS factoryName,
        TI.item_name AS itemName,
        TS.stock_qty AS stockQty,
        TI.item_price AS itemPrice,
        TI.item_src AS itemSrc
        FROM TRIO_ITEMS TI
        JOIN TRIO_STOCK TS ON TI.item_code = TS.item_code
        JOIN TRIO_CATEGORY TC ON TI.category_code = TC.category_code
        JOIN TRIO_FACTORY TF ON TI.factory_code = TF.factory_code
        WHERE TI.item_code = #{itemCode}
    </select>

    <!--  cart item list -->
    <select id="cartItemList" resultType="ItemInfoByCart">
        SELECT
            c.cart_code AS cartCode,
            c.user_code AS userCode,
            c.cartitem_qty AS cartItemQty,
            i.item_code AS itemCode,
            i.item_name AS itemName,
            i.item_price AS itemPrice,
            i.item_src AS itemSrc,
            i.item_color AS itemColor,
            i.item_size AS itemSize,
            s.stock_qty AS stockQty,
            tc.category_name AS categoryName
        FROM
            TRIO_CART c
                JOIN TRIO_ITEMS i ON c.item_code = i.item_code
                JOIN TRIO_STOCK s ON i.item_code = s.item_code
                JOIN TRIO_CATEGORY tc ON i.category_code = tc.category_code
        WHERE c.user_code = #{userCode}
    </select>

    <!--  order list -->
    <select id="orderList" resultType="ItemInfoByOrderList">
        SELECT o.order_code,
               o.order_date,
               os.status_name,
               oi.item_code,
               i.item_name,
               oi.order_qty,
               i.item_price
        FROM TRIO_ORDERS o
                 JOIN TRIO_ORDER_STATUS os ON o.status_code = os.status_code
                 JOIN TRIO_ORDER_ITEMS oi ON o.order_code = oi.order_code
                 JOIN TRIO_ITEMS i ON oi.item_code = i.item_code
        WHERE o.user_code = #{userCode}
    </select>
    <!--  insert TRIO_ORDERS  -->
    <insert id="insertOrders">
        INSERT INTO TRIO_ORDERS (order_code, user_code, status_code, order_receiver, order_destination, order_date, order_tel)
        VALUES (#{orderCode}, #{userCode}, #{statusCode}, #{orderReceiver}, #{orderDestination}, #{orderDate}, #{orderTel})
    </insert>

    <!--  insert TRIO_ORDER_ITEMS  -->
    <insert id="insertOrderItems">
        INSERT INTO TRIO_ORDER_ITEMS (order_itemcode, order_code, item_code, order_qty)
        VALUES (LAST_INSERT_ID(), #{orderCode}, #{itemCode}, #{orderQty})
    </insert>

</mapper>
